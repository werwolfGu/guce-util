<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       	http://www.springframework.org/schema/aop
       	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <!-- <import resource="spring-jdbc.xml"/> -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/jdbc.properties</value>

            </list>
        </property>
    </bean>

    <context:component-scan base-package="com.guce,com">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!--initialSize: 初始化连接 -->
        <property name="initialSize" value="5" />
        <!--maxIdle: 最大空闲连接 -->
        <property name="maxIdle" value="50" />
        <!--minIdle: 最小空闲连接 -->
        <property name="minIdle" value="5" />
        <!--maxActive: 最大连接数量 -->
        <property name="maxActive" value="50" />

        <!--removeAbandoned: 是否自动回收超时连接 -->
        <property name="removeAbandoned" value="true" />
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
        <property name="removeAbandonedTimeout" value="360" />
        <!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
        <property name="maxWait" value="3000" />

        <property name= "testWhileIdle" ><value>true</value></property>
        <property name= "testOnBorrow" ><value>true</value></property>
        <property name= "testOnReturn" ><value>true</value></property>
        <property name= "validationQuery" ><value>select 1 from dual</value></property>
        <property name= "timeBetweenEvictionRunsMillis" ><value>30000</value></property>
        <property name= "numTestsPerEvictionRun" ><value>32</value></property>
        <property name="minEvictableIdleTimeMillis"><value>1800000</value></property>
    </bean>

    <bean id="configDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${config.jdbc.driverClassName}" />
        <property name="url" value="${config.jdbc.url}" />
        <property name="username" value="${config.jdbc.username}" />
        <property name="password" value="${config.jdbc.password}" />

        <!--initialSize: 初始化连接 -->
        <property name="initialSize" value="1" />
        <!--maxIdle: 最大空闲连接 -->
        <property name="maxIdle" value="50" />
        <!--minIdle: 最小空闲连接 -->
        <property name="minIdle" value="1" />
        <!--maxActive: 最大连接数量 -->
        <property name="maxActive" value="50" />

        <!--removeAbandoned: 是否自动回收超时连接 -->
        <property name="removeAbandoned" value="true" />
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
        <property name="removeAbandonedTimeout" value="360" />
        <!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
        <property name="maxWait" value="3000" />

        <property name= "testWhileIdle" ><value>true</value></property>
        <property name= "testOnBorrow" ><value>true</value></property>
        <property name= "testOnReturn" ><value>true</value></property>
        <property name= "validationQuery" ><value>select 1 from dual</value></property>
        <property name= "timeBetweenEvictionRunsMillis" ><value>30000</value></property>
        <property name= "numTestsPerEvictionRun" ><value>32</value></property>
        <property name="minEvictableIdleTimeMillis"><value>1800000</value></property>
    </bean>


    <!-- 配置所有数据源， 历史库与在途库-->
    <bean id="dynamicDataSource"
          class="com.ztesoft.isap.switchDB.DynamicDataSource">
        <!-- 通过key-value的形式来关联数据源 -->
        <property name="targetDataSources">
            <map>
                <entry key="online" value-ref="dataSource"></entry>

                <entry key="config" value-ref="configDataSource"></entry> <!-- 配置数据序列号公用数据源  -->
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref local="dynamicDataSource" />
        </property>
    </bean>

    <!--声明使用注释式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="insert*" />
            <tx:method name="add*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="interceptorPointCuts"
                      expression="execution(* com.guce.*.*(..))" />
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="interceptorPointCuts" />
    </aop:config>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource" />
        <property name="configLocation">
            <value>classpath:config/mybatis/mybatis-config.xml</value>
        </property>
        <!--<property name="mapperLocations" value="classpath:com/ztesoft/*/*/*/sqlmapper/*Mapper.xml"/>-->
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dynamicDataSource" />
    </bean>

    <!-- rmi服务，客户端 -->
    <bean id="clientService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean" lazy-init="true">
        <!--云南 135.33.6.224:1718  浙江192.168.1.254:8001-->
        <property name="serviceUrl" value="rmi://135.33.6.246:1718/svService"/>
        <property name="serviceInterface" value="com.ztesoft.ispp.rmi.IEventService"/>
        <property name="lookupStubOnStartup" value="false"></property>
        <property name="refreshStubOnConnectFailure" value="true"></property>
    </bean>

</beans>
